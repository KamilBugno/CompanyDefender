@using CompanyDefender.Models;
@using CompanyDefender.Converters;
@{
    ViewBag.Title = "Analiza korespondencji";
}
@model PersonMailFullViewModel

<!doctype html>
<html>
<head>
    <title>Mails viewer</title>
    <script type="text/javascript" src="~/Scripts/vis.js"></script>
    
</head>
<body>
    <h2>Analiza korespondencji</h2>

   
    @using (Html.BeginForm())
    {
       @Html.TextBoxFor(model => model.StartDate, new { @class = "TextBox"})
       @Html.TextBoxFor(model => model.EndDate, new { @class = "TextBox"})
       @Html.TextBoxFor(model => model.Query, new { @class = "TextBox" })
       <input type="submit" id="submitBody" value="Wyszukaj w treści maili" formaction="SearchByBody" formmethod="post" />
       <input type="submit" id="submitAttachment" value="Wyszukaj w załączniku maili" formaction="SearchByAttachment" formmethod="post" />
       <input type="submit" id="submitReset" value="Wyczyść wyszukiwanie" formaction="AllMails" formmethod="post" />
    }


    <div id="mynetwork"></div>
    <p><br>Lista wysłanych maili:</p>
    <table class="data table table-bordered table-responsive" id="mails">
        <thead>
            <tr>
                <th id="sort-id">Id</th>
                <th>Nadawca</th>
                <th>Odbiorca</th>
                <th>Data</th>
                <th>Temat wiadomości</th>
                <th>Treść wiadomości</th>
                <th>Załącznik</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mailsRow in Model.MailsTable)
            {
                <tr>
                    <td>@mailsRow.Id</td>
                    <td>
                        @Ajax.ActionLink(mailsRow.FullNameFrom, "_PersonDetailsPopup", "Home", new { key = mailsRow.KeyFrom }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "person-dialog", InsertionMode = InsertionMode.Replace }, new { @class = "link" } )
                    </td>
                    <td>
                        @Ajax.ActionLink(mailsRow.FullNameTo, "_PersonDetailsPopup", "Home", new { key = mailsRow.KeyTo }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "person-dialog", InsertionMode = InsertionMode.Replace }, new { @class = "link" })
                    </td>
                    <td>@mailsRow.Date</td>
                    <td>@mailsRow.Topic</td>
                    <td>@mailsRow.Body</td>
                    <td>
                        @if (mailsRow.HasAttachment)
                        {
                            @Html.ActionLink("Pobierz załącznik",
                                             "DownloadAttachment",
                                             new { fileName = mailsRow.Id },
                                             new { @class = "download" })
                        }
                        else
                        {
                            <p class="no-download">Brak załącznika</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>  

    <div id="person-dialog" title="Szczegóły wybranej osoby">
    </div>

    <a href="#">Na górę strony</a>

    <script type="text/javascript">
        var $jq = jQuery.noConflict();
        var persons = @JavaScriptConvert.SerializeObjectToJson(Model.PersonsGraph);
        var nodes = new vis.DataSet(persons);

        var mails = @JavaScriptConvert.SerializeObjectToJson(Model.MailsGraph);
        var edges = new vis.DataSet(mails);

        var container = document.getElementById('mynetwork');
        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            interaction: { hover: true },
            manipulation: {
                enabled: true
            },
            physics: {
                forceAtlas2Based: {
                    gravitationalConstant: -26,
                    centralGravity: 0.005,
                    springLength: 230,
                    springConstant: 0.18
                },
                maxVelocity: 146,
                solver: 'forceAtlas2Based',
                timestep: 0.35,
                stabilization: { iterations: 150 }
            }};
        var network = new vis.Network(container, data, options);

        network.on("selectEdge", function (params) {
            //alert('selectEdge Event:' + params);
            //console.log('selectEdge Event:', params);
        });

        $jq(document).ready(function () {
            $jq('#mails tr:odd').addClass('zebra');
            
            $jq('#mails tbody tr').hover(function () {
                $jq(this).addClass('zebraHover');
            }, function () {
                $jq(this).removeClass('zebraHover');
            });

            $jq('a[href="#"]').click(function () {
                $jq('html').animate({ scrollTop: 0 }, 'slow');
                return false;
            });
            $jq("#person-dialog").dialog({
                autoOpen: false,
                minHeight: 250,
                minWidth: 450
            });
            $jq(".link").click(function () {
                $('#person-dialog').empty();
                $jq("#person-dialog").dialog("open");
            });

            $jq("#StartDate").datepicker({ dateFormat: 'yy-mm-dd' });
            $jq("#EndDate").datepicker({ dateFormat: 'yy-mm-dd' });

        });
    </script>

</body>
</html>
